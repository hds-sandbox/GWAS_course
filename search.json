[
  {
    "objectID": "access/UCloud.html",
    "href": "access/UCloud.html",
    "title": "Accessing the GWAS workshop on",
    "section": "",
    "text": "1. User accounts on UCloud are enabled by university login credentials using WAYF (Where Are You From). Access the WAYF login portal with the button below here, and then find your affiliated university or institution using the search bar.\n \n\n UCloud Access - click here \n\n \n\n\n\n\n\n\nGWAS with the sandbox\n\n\n\nIf you are participating in the NGS Summer Course 2024 in Aarhus, click AFTER logging in on the button below. This will add you to a project on uCloud, where we have data and extra computing credit for the course. You should see a message on your browser where you have to accept the invitation to the project. The link expires 30 days after the course.\n \n#\n\n\n\n\n\nInvite link\n\n\nfor the course\n\n\n\n#\n\n \n\n\n\n2. Once you are an approved user of UCloud, you are met with a dashboard interface as below. Here you can see a summary of the workspace you are using, like the hours of computing, the storage available, and other informations. The workspace you are working on is shown in the top-right corner (red circle). On the left side of the screen you have a toolbar menu.\n\n \n\n\n\n\n\n\nNGS summer school\n\n\n\nIf you are participating in the NGS Summer Course 2024 in Aarhus, choose the workspace NGS summer school.\n\n\n\n3. The left-side menu can be used to access the stored data, applications, running programs and settings. Use the Applications symbol (red circle) and click on the Health Science store (green circle).\n\n5. Your screen will show some apps falling in the Health Science subcategory. Click on the Genomics Sandbox application to open its settings.\n\n6. Choose any Job Name (Nr 1 in the figure below), how many hours you want to use for the job (Nr 2, choose at least 2 hours, you can increase this later), and how many CPUs (Nr 3, choose at least 4 CPUs for the first three exercises, but use at least 8 CPUs to run the single cell analysis). Select the Introduction to NGS Data Analysis as course (Nr 4). Then click on Submit (Nr 5).\n\n7. You will be waiting in a queue looking like this\n\n8. As soon as there are resources, you will have them available, and in a short time the course will be ready to run. The screen you get is in the image below. Here you can increase the number of hours you want the session to run (red circle), close the session (green circle) and open the interface for coding (blue circle)\n\n\n\n\n\n\n\nTip\n\n\n\nOnce you open the coding interface, it does not matter if you close the browser tab with the countdown timer. You can always access it again from the toolbar menu of uCloud. Simply click on jobs and choose your session from the list of running softwares:\n\n\n\n9. Now you are ready to use JupyterLab for coding. Use the file browser (on the left-side) to find the folder Notebooks. Select one of the four tutorials of the course. You will see that the notebook opens on the right-side pane. Read the text of the tutorial and execute each code cell starting from the first. You will see results showing up directly on the notebook!\n\n\nRecovering the material from your previous session\nIt would be annoying to start from scratch at each session, with all the analysis to be executed again. You can of course find all the notebooks and results in your personal user folder in the workspace in which you are working.\nTo retrieve your work add the folders Data and Notebooks in the submission page of the Genomics App. Those are inside your user folder (called member Files: NameSurname#Number) under Jobs/Genomics Sandbox/SessionName. For example, look at how the Data folder is added from a previous session:\n\nYou need to do the same thing for the folder Notebooks. In the end you should have two folders added in your setup page just as below:"
  },
  {
    "objectID": "access/genomedk.html",
    "href": "access/genomedk.html",
    "title": "Accessing the GWAS workshop on GenomeDK",
    "section": "",
    "text": "If you are using GenomeDK, you have two options. One is to use a pre-packaged Docker container, which contains jupyterlab and the necessary packages to run all the notebooks. GenomeDK comes with singularity, which can import and execute Docker containers and is able to ensure full reproducibility of the analysis. The second option is to download the github repository of the course and create your own conda environment: this solution works also on any computing cluster where you can have conda installed and is shown in the page dedicate to the access with any computing cluster."
  },
  {
    "objectID": "access/genomedk.html#singularity-container",
    "href": "access/genomedk.html#singularity-container",
    "title": "Accessing the GWAS workshop on GenomeDK",
    "section": "Singularity container",
    "text": "Singularity container\n1. Log into the cluster using the command line, and substituting USERNAME with your actual user name:\nssh USERNAME@login.genome.au.dk\nand be sure to run those two commands to remove space-filling cache data, which can make everything slower after a few times you run tutorials\n\nrm -rf ~/.apptainer/cache/*\nrm -rf ~/.singularity/cache/*\n2. Get into a folder inside your project, for example\n\ncd MYPROJECT/ngsSummerSchool\n\n\n\n\n\n\nWarning\n\n\n\nDo not work directly in your home folder /home/username, as this has a limit of 100GB of space available. Work instead inside a previously established project folder.\n\n\n3. Use singularity to download the container of the course. This will take some time and show a lot of text, and at the end a file called course.sif is created into the folder.\n\nsingularity pull course.sif docker://hdssandbox/ngssummerschool:2024.07\n\n\n\n\n\n\nWarning\n\n\n\nYou need to do this step only once!\n\n\n4. Activate tmux: this will make things run in backround. If you lose your internet connection, the course material will still be up and running when the connection is back on your pc! Use the command\n\ntmux\nThe command line will change a bit its aspect. Now it’s time to get a few resources to run all the material. We suggest one CPU and 32GB of RAM for the first three modules, and 2 CPUs and 64GB of RAM for the single-cell analysis. For the first configuration suggested, for example, you get resources using\n\n\nsrun --mem=32g --cores=1 --time=4:0:0  --account=MYPROJECT --pty /bin/bash\n\n\n\n\n\n\nNote\n\n\n\nNote you always need your project name, and you can also choose for how long you want the resources to be available to you. Asking for resources means waiting for some time in a queue before they are assigned.\nIn the example above time is 4 hours. After this time, whatever you are doing will be closed, so be sure to save your work in progress.\n\n\n5. execute the container with\nsingularity exec course.sif /bin/bash\nNote that the command line shows now Apptainer&gt; on its left. We are inside the container and the tools we need are now available into it.\n6. Now we need to run a configuration script, which will setup the last details and execute jupyterlab. If a folder called Data exists, it will not be downloaded again (also meaning that you can use our container with your own data folder for your own analysis in future)\ngit config --global http.sslVerify false\nwget -qO-  https://raw.githubusercontent.com/hds-sandbox/NGS_summer_course_Aarhus/docker/scripts/courseMaterial.sh | bash\n7. You will see a lot of messages, which is normal. At the end of the messages, you are provided two links looking as in the image below. Write down the node name and the user id highlighted in the circles.\n\nWrote down node and ID? Last step is to create a tunnel between your computer and genomeDK to be able to see jupyterlab in your browser. Now you need to use the node name and the user id you wrote down before! Open a new terminal window on your laptop and write\n\nssh -L USERID:NODENAME:USERID USERNAME@login.genome.au.dk\nwhere you substitute USERID and NODENAME as you wrote down before, and then USERNAME is your account name on GenomeDK. For example ssh -L 6835:s21n81:6835 samuele@login.genome.au.dk according to the figure above for a user with name samuele.\n8. Open your browser and go to the address http://127.0.0.1:USERID/lab, where you need your user id again instead of USERID. For example http://127.0.0.1:6835/lab from the figure above. Jupyterlab opens in your browser.\n9. Now you are ready to use JupyterLab for coding. Use the file browser (on the left-side) to find the folder Notebooks. Select one of the four tutorials of the course. You will see that the notebook opens on the right-side pane. Read the text of the tutorial and execute each code cell starting from the first. You will see results showing up directly on the notebook!\n\n\n\n\n\n\n\nTip\n\n\n\nRight click on a notebook or a saved results file, and use the download option to save it locally on your computer.\n\n\n\nWhat if my internet connection drops?\nNow worries, tmux kept your material up and running. You only need a new terminal window to run the tunneling\n\nssh -L USERID:NODENAME:USERID USERNAME@login.genome.au.dk\nas you did before, so you can continue working!\n\n\nRecovering the material from your previous session\nDo you want to work again on the course material, or recover some analysis? Everything is saved in the folder you were working in. Next time, follow the whole procedure again (without step number 3.) and you can be up and running the course in no time."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Genome-Wide Association Studies",
    "section": "",
    "text": "Genome-Wide Association Studies\n\nThis course is an introduction to the method of Genome-Wide Association Studies (GWAS), which quantifies the statistical association between a genetic variant and a phenotype (often on disease traits). This course will not focus on using any particular software, instead explaining why the given analyses are done from a statistical and biological perspective.\n\n\n\n\nAuthors\n\nSamuele Soraggi Conor O’Hare\n\n\n!!! abstract “Overview” 💬 Syllabus:\n1. Understand what is a GWAS is and why we use it\n2. Statistics of GWAS (regression coefficients, P-values, statistical power, Bayes factors)\n3. Genetic relatedness and population structure\n4. Confounding and covariates in GWAS\n5. Haplotypes, linkage disequilibrum, imputation, fine-mapping\n6. Linear mixed models and heritability\n7. Summary statistics and meta-analysis\n8. Advanced tools\n&#128368; **Total Time Estimation:** 6 hours  \n\n&#128193; **Supporting Materials:**  [Original course from the University of Helsinki](https://www.mv.helsinki.fi/home/mjxpirin/GWAS_course) | \n                                     [PLINK documentation](https://zzz.bwh.harvard.edu/plink/) | \n                                     [An Introduction to Statistical Learning (for further statistics explanations)](https://www.statlearning.com/)\n\n&#128203; **License:** [Tutorial Content is licensed under Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/)\n!!! warning “Course Requirements” - Knowledge of R. It is recommended that you have at least followed our workshop From Excel to R - Basic statistics and mathematics skills\n\nWe do GWAS because a statistical association between a particular physical region of the genome and the phenotype\n\ncan point to biological mechanisms affecting the phenotype,\n\ncan allow prediction of the phenotype from genomic information.\n\nThese results may further benefit\n\nmedicine by leading to molecular or environmental interventions against harmful phenotypes,\n\nbiotechnology by improving the ways we utilize microbes, plants or animals,\n\nforensics by more accurate identification of an individual from a DNA sample,\n\nbiogeographic ancestry inference of individuals, populations and species,\n\nour understanding of the role of natural selection and other evolutionary forces in the living world.\n\nThe genome of an individual remain (nearly) constant throughout the individual’s lifetime. This is a truly remarkable property compared to, e.g., other molecular sources of information (such as metabolomics, metagenomics, transcriptomics, proteomics or epigenomics) or environmental factors that may vary widely across time. Therefore, the genome seems an ideal starting point for scientific research: it needs to be measured only once for an individual and there is no reverse causation from the phenotype to genome (with cancer as an important exception).\n\nAcknowledgements\n\nCenter for Health Data Science, University of Copenhagen\nMatti Pirinen, PhD, University of Helsinki\nAndries T. Marees, Vrije Universiteit Amsterdam"
  },
  {
    "objectID": "access/index.html",
    "href": "access/index.html",
    "title": "HPC access",
    "section": "",
    "text": "The Sandbox is collaborating with the two major academic high performance computing platforms in Denmark. Computerome is located at the Technical University of Denmark (and co-owned by the University of Copenhagen) while UCloud is owned by the University of Southern Denmark. These HPC platforms each have their own strengths which we leverage in the Sandbox in different ways."
  },
  {
    "objectID": "access/index.html#ucloud",
    "href": "access/index.html#ucloud",
    "title": "HPC access",
    "section": "UCloud",
    "text": "UCloud\nUCloud is a relatively new HPC platform that can be accessed by students at Danish universities (via a WAYF university login). It has a user friendly graphical user interface that supports straightforward project, user, and resource management. UCloud provides access to many tools via selectable Apps matched with a range of flexible compute resources, and the Sandbox is deploying training modules in this form such that any UCloud user can easily access Sandbox materials independently. The Sandbox is also hosting workshops and training events on UCloud in conjunction with in-person training.\n\n\n\n\n\n\nAccess Sandbox Apps on UCloud\n\n\n\nFind detailed instructions on accessing Sandbox apps here via UCloud. Check out UCloud’s extensive user docs here."
  },
  {
    "objectID": "access/index.html#computerome",
    "href": "access/index.html#computerome",
    "title": "HPC access",
    "section": "Computerome",
    "text": "Computerome\nComputerome is the home of many sensitive health datasets via collaborations between DTU, KU, Rigshospitalet, and other major health sector players in the Capital Region of Denmark. Computerome has recently launched their secure cloud platform, DELPHI, and in collaboration with the Sandbox has built a Course Platform on the same backbone such that courses and training can be conducted in the same environment as real research would be performed in the secure cloud. The Sandbox is supporting courses in the Course Platform, but it is also available for independent use by educators at Danish universities. Please see their website for more information on independent use and pricing, and contact us if you’d like to collaborate on hosting a course on Computerome. We can help with tool installation, environment testing, and user support (ranging from using the environment to course content if we have Sandbox staff with matching expertise).\nParticipants in courses co-hosted by the Sandbox can check here for access instructions."
  },
  {
    "objectID": "access/index.html#genomedk",
    "href": "access/index.html#genomedk",
    "title": "HPC access",
    "section": "GenomeDK",
    "text": "GenomeDK\nIn development."
  },
  {
    "objectID": "access/index.html#any-other-computing-cluster",
    "href": "access/index.html#any-other-computing-cluster",
    "title": "HPC access",
    "section": "Any other computing cluster",
    "text": "Any other computing cluster\nIn development."
  },
  {
    "objectID": "access/index.html#your-local-pc",
    "href": "access/index.html#your-local-pc",
    "title": "HPC access",
    "section": "Your local PC",
    "text": "Your local PC\nIn development."
  }
]